from aiogram import Router, F
from aiogram.filters import Command, KICKED, ChatMemberUpdatedFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, ChatMemberUpdated
from config import HELPER_URL
from database.models import User, Stat
import keyboards
import states
import utils

router = Router()


@router.message(Command("start"))
async def start(message: Message):
    is_new_user = User.add_user(message.chat.id, message.chat.username)
    if is_new_user:
        Stat.increment_stat()

    await message.answer('üôãüèª‚Äç‚ôÇ –ú–µ–Ω—ñ“£ –µ—Å—ñ–º—ñ–º –¢–æ“ì—ã–∑–±–∞–π \n ‚ÅÉ –ñ–∞—Å—ã–º 22 –¥–µ \n ‚ÅÉ –ê–π–ª—ã“õ —Ç–∞–±—ã—Å—ã–º 8.000.000 —Ç–≥\n\n'
                         '‚óæ –ë“±–ª —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—Ç–∞ —Å—ñ–∑ –∫“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ 30.000-–Ω–∞–Ω 80.000 —Ç–µ“£–≥–µ–≥–µ –¥–µ–π—ñ–Ω —Ç–∞–±—ã—Å —Ç–∞–±–∞ –∞–ª–∞—Å—ã–∑‚úÖ\n\n'
                         '‚óæ –ú–µ–Ω —Ç–∞–Ω—ã–º–∞–ª –û–Ω–ª–∞–π–Ω –æ–π—ã–Ω –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–ª–∞—Ä—ã–Ω–¥–∞ ”©–∑—ñ–º–Ω—ñ“£ —Å—Ö–µ–º–∞–ª–∞—Ä—ã–º–º–µ–Ω –∞“õ—à–∞ —Ç–∞–±–∞–º—ã–Ω !\n\n'
                         '‚óæ –ë—ñ–∑ –∫“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ –æ–π—ã–Ω —Ç–∞–ª–¥–∞—É—ã–Ω–∞ –Ω–µ–≥—ñ–∑–¥–µ–ª–≥–µ–Ω –∞–ª–≥–æ—Ä–∏—Ç–º–¥–µ—Ä –º–µ–Ω —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–ª–∞—Ä–¥—ã –∂”ô–Ω–µ –í–∑–ª–æ–º '
                         '—Å–∏—Å—Ç–µ–º–∞–ª–∞—Ä–¥—ã “õ–æ–ª–¥–∞–Ω–∞–º—ã–∑. –û–ª–∞—Ä –±—ñ–∑–≥–µ “∞—Ç—ã—Å“õ–∞ —à—ã“ì—É“ì–∞ –ì–∞—Ä–∞–Ω—Ç–∏—è –±–µ—Ä–µ–¥—ñ.\n\n'
                         'üôÜüèª‚Äç‚ôÇ –°—Ö–µ–º–∞ —Ç“Ø—Å—ñ–Ω–±–µ–≥–µ–Ω –∂–∞“ì–¥–∞–π–¥–∞ —Å—ñ–∑–¥–µ—Ä–≥–µ ‚Äú–ü—Ä—è–º–æ–π —ç—Ñ–∏—Ä–¥–∞‚Äù –æ–π–Ω–∞–ø –æ—Ç—ã—Ä—ã–ø “Ø–π—Ä–µ—Ç–µ—Ç—ñ–Ω –±–æ–ª–∞–º—ã–Ω.')
    await utils.send_video(
        message.bot,
        video_name='start.mp4',
        chat_id=message.chat.id,
        reply_markup=keyboards.start.as_markup()
    )


@router.callback_query(F.data == 'about_money')
async def get_about_money_info(call: CallbackQuery):
    await utils.send_video(
        call.bot,
        video_name='about_money.mp4',
        chat_id=call.message.chat.id,
        reply_markup=keyboards.comment_button.as_markup()
    )
    await call.message.answer('–û—Ç–∑—ã–≤—Ç–∞—Ä–¥—ã –∫–∞—Ä–∞—É ‚Üó')
    await call.message.answer(
        'üôãüèª‚Äç‚ôÇ –ì–∞—Ä–∞–Ω—Ç–∏—è –±–µ—Ä–µ–º , –°—ñ–∑–¥—ñ –¥–µ –æ—Å—ã–Ω–¥–∞–π “±—Ç—ã—Å“õ–∞ —à—ã“ì–∞—Ä–º–∞–π “õ–æ–π–º–∞–π–º—ã–Ω. ”®–∑—ñ–º —Ç–æ–ª—ã“õ—Ç–∞–π '
        '—Å—ñ–∑–≥–µ –∫”©—Ä—Å–µ—Ç—ñ–ø “Ø–π—Ä–µ—Ç–µ–º—ñ–Ω üôèüèª\n\n'
        f'–°—Ä–∞–∑—É –±–∞—Å—Ç–∞–≥—ã–Ω –∫–µ–ª—Å–µ –º–∞–≥–∞–Ω –∂–∞–∑ \"–ö–∞–ª–∞–π –±–∞—Å—Ç–∞–π–º—ã–Ω\" –¥–µ–ø - {HELPER_URL}',
        reply_markup=keyboards.help_button.as_markup()
    )


@router.callback_query(F.data == 'comments')
@router.callback_query(F.data == 'more_comments')
async def get_more_comments(call: CallbackQuery, state: FSMContext):
    await state.set_state(states.SendPhoto.send_photos)
    data = await state.get_data()
    last_photo_id = data.get('last_photo_id', 0)

    if call.data == 'comments' or last_photo_id == 20:
        last_photo_id = 0

    last_messages_comments_ids = data.get('comments')

    if last_messages_comments_ids:
        await utils.safe_delete_media(call.bot, call.message.chat.id, last_messages_comments_ids)

    ids = await send_photos_range(call.bot, call.message.chat.id, last_photo_id+1, last_photo_id+5)
    await state.update_data({'last_photo_id': last_photo_id+5})
    await state.update_data({'comments': ids})


async def send_photos_range(bot, chat_id: int, start_index: int, end_index: int):
    ids = []
    for i in range(start_index, end_index):
        msg = await utils.send_photo(bot, f'{i}.jpg', chat_id=chat_id)
        ids.append(msg.message_id)

    msg = await utils.send_photo(
        bot,
        f'{i+1}.jpg',
        chat_id=chat_id,
        reply_markup=keyboards.more_comments.as_markup()
    )
    ids.append(msg.message_id)

    return ids


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=KICKED))
async def check_bot(event: ChatMemberUpdated):
    Stat.add_block_user(event.chat.id)
